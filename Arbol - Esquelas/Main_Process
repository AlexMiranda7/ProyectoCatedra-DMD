%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 230 575 561
%%Creator: RapidMiner
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 9330 
%%For: 
%%Title: 
%%CreationDate: Saturday, April 30, 2022 1:43:24 PM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
1145 682 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
.913725 .925490 .949020 RG
newpath
0.00000 0.00000 m
1145.00 0.00000 l
1145.00 682.000 l
0.00000 682.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
q
cliprestore
0 0 1145 682 rc
q
.913725 .925490 .949020 RG
newpath
0.00000 0.00000 m
1145.00 0.00000 l
1145.00 682.000 l
0.00000 682.000 l
0.00000 0.00000 l
h
f
Q
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 -1.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 10.0000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 25.0000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1095.00 0.00000 l
1095.00 662.000 l
0.00000 662.000 l
0.00000 0.00000 l
h
f
.752941 .752941 .752941 RG
newpath
12.8438 22.0000 m
12.8438 13.4062 l
15.4531 13.4062 l
17.0000 19.2656 l
18.5469 13.4062 l
21.1406 13.4062 l
21.1406 22.0000 l
19.5312 22.0000 l
19.5312 15.2344 l
17.8281 22.0000 l
16.1562 22.0000 l
14.4688 15.2344 l
14.4688 22.0000 l
12.8438 22.0000 l
h
24.0898 17.6719 m
22.5898 17.4062 l
22.7565 16.8021 23.0456 16.3568 23.4570 16.0703  c
23.8685 15.7839 24.4805 15.6406 25.2930 15.6406  c
26.0221 15.6406 26.5664 15.7266 26.9258 15.8984  c
27.2852 16.0703 27.5378 16.2891 27.6836 16.5547  c
27.8294 16.8203 27.9023 17.3125 27.9023 18.0312  c
27.8867 19.9531 l
27.8867 20.5052 27.9128 20.9089 27.9648 21.1641  c
28.0169 21.4193 28.1159 21.6979 28.2617 22.0000  c
26.6367 22.0000 l
26.5951 21.8854 26.5430 21.7240 26.4805 21.5156  c
26.4492 21.4115 26.4284 21.3438 26.4180 21.3125  c
26.1367 21.5938 25.8372 21.8021 25.5195 21.9375  c
25.2018 22.0729 24.8607 22.1406 24.4961 22.1406  c
23.8503 22.1406 23.3424 21.9661 22.9727 21.6172  c
22.6029 21.2682 22.4180 20.8281 22.4180 20.2969  c
22.4180 19.9427 22.5039 19.6302 22.6758 19.3594  c
22.8477 19.0885 23.0846 18.8776 23.3867 18.7266  c
23.6888 18.5755 24.1263 18.4479 24.6992 18.3438  c
25.4596 18.1979 25.9909 18.0625 26.2930 17.9375  c
26.2930 17.7812 l
26.2930 17.4583 26.2148 17.2292 26.0586 17.0938  c
25.9023 16.9583 25.6055 16.8906 25.1680 16.8906  c
24.8763 16.8906 24.6497 16.9479 24.4883 17.0625  c
24.3268 17.1771 24.1940 17.3802 24.0898 17.6719  c
h
26.2930 19.0156 m
26.0846 19.0781 25.7513 19.1589 25.2930 19.2578  c
24.8346 19.3568 24.5326 19.4531 24.3867 19.5469  c
24.1784 19.7031 24.0742 19.8958 24.0742 20.1250  c
24.0742 20.3542 24.1602 20.5547 24.3320 20.7266  c
24.5039 20.8984 24.7201 20.9844 24.9805 20.9844  c
25.2826 20.9844 25.5690 20.8854 25.8398 20.6875  c
26.0378 20.5417 26.1680 20.3594 26.2305 20.1406  c
26.2721 20.0052 26.2930 19.7396 26.2930 19.3438  c
26.2930 19.0156 l
h
29.5293 14.9375 m
29.5293 13.4062 l
31.1855 13.4062 l
31.1855 14.9375 l
29.5293 14.9375 l
h
29.5293 22.0000 m
29.5293 15.7812 l
31.1855 15.7812 l
31.1855 22.0000 l
29.5293 22.0000 l
h
38.5195 22.0000 m
36.8789 22.0000 l
36.8789 18.8281 l
36.8789 18.1510 36.8451 17.7135 36.7773 17.5156  c
36.7096 17.3177 36.5951 17.1641 36.4336 17.0547  c
36.2721 16.9453 36.0820 16.8906 35.8633 16.8906  c
35.5716 16.8906 35.3138 16.9688 35.0898 17.1250  c
34.8659 17.2812 34.7122 17.4896 34.6289 17.7500  c
34.5456 18.0104 34.5039 18.4896 34.5039 19.1875  c
34.5039 22.0000 l
32.8477 22.0000 l
32.8477 15.7812 l
34.3789 15.7812 l
34.3789 16.6875 l
34.9206 15.9896 35.6081 15.6406 36.4414 15.6406  c
36.7956 15.6406 37.1237 15.7057 37.4258 15.8359  c
37.7279 15.9661 37.9570 16.1328 38.1133 16.3359  c
38.2695 16.5391 38.3763 16.7682 38.4336 17.0234  c
38.4909 17.2786 38.5195 17.6458 38.5195 18.1250  c
38.5195 22.0000 l
h
43.5430 22.0000 m
43.5430 13.4062 l
46.3242 13.4062 l
47.3763 13.4062 48.0638 13.4479 48.3867 13.5312  c
48.8763 13.6667 49.2878 13.9505 49.6211 14.3828  c
49.9544 14.8151 50.1211 15.3698 50.1211 16.0469  c
50.1211 16.5781 50.0247 17.0234 49.8320 17.3828  c
49.6393 17.7422 49.3971 18.0234 49.1055 18.2266  c
48.8138 18.4297 48.5117 18.5677 48.1992 18.6406  c
47.7930 18.7240 47.1940 18.7656 46.4023 18.7656  c
45.2773 18.7656 l
45.2773 22.0000 l
43.5430 22.0000 l
h
45.2773 14.8594 m
45.2773 17.2969 l
46.2305 17.2969 l
46.9076 17.2969 47.3633 17.2526 47.5977 17.1641  c
47.8320 17.0755 48.0143 16.9349 48.1445 16.7422  c
48.2747 16.5495 48.3398 16.3281 48.3398 16.0781  c
48.3398 15.7656 48.2461 15.5078 48.0586 15.3047  c
47.8711 15.1016 47.6367 14.9740 47.3555 14.9219  c
47.1576 14.8802 46.7461 14.8594 46.1211 14.8594  c
45.2773 14.8594 l
h
53.1094 22.0000 m
51.4688 22.0000 l
51.4688 15.7812 l
53.0000 15.7812 l
53.0000 16.6562 l
53.2604 16.2396 53.4948 15.9661 53.7031 15.8359  c
53.9115 15.7057 54.1458 15.6406 54.4062 15.6406  c
54.7812 15.6406 55.1458 15.7448 55.5000 15.9531  c
54.9844 17.3750 l
54.7031 17.1979 54.4479 17.1094 54.2188 17.1094  c
53.9792 17.1094 53.7812 17.1745 53.6250 17.3047  c
53.4688 17.4349 53.3438 17.6641 53.2500 17.9922  c
53.1562 18.3203 53.1094 19.0156 53.1094 20.0781  c
53.1094 22.0000 l
h
55.8262 18.7969 m
55.8262 18.2552 55.9616 17.7266 56.2324 17.2109  c
56.5033 16.6953 56.8835 16.3047 57.3730 16.0391  c
57.8626 15.7734 58.4147 15.6406 59.0293 15.6406  c
59.9668 15.6406 60.7376 15.9453 61.3418 16.5547  c
61.9460 17.1641 62.2480 17.9375 62.2480 18.8750  c
62.2480 19.8125 61.9434 20.5911 61.3340 21.2109  c
60.7246 21.8307 59.9616 22.1406 59.0449 22.1406  c
58.4720 22.1406 57.9277 22.0104 57.4121 21.7500  c
56.8965 21.4896 56.5033 21.1120 56.2324 20.6172  c
55.9616 20.1224 55.8262 19.5156 55.8262 18.7969  c
h
57.5137 18.8906 m
57.5137 19.5052 57.6595 19.9766 57.9512 20.3047  c
58.2428 20.6328 58.6022 20.7969 59.0293 20.7969  c
59.4668 20.7969 59.8288 20.6328 60.1152 20.3047  c
60.4017 19.9766 60.5449 19.5000 60.5449 18.8750  c
60.5449 18.2708 60.4017 17.8047 60.1152 17.4766  c
59.8288 17.1484 59.4668 16.9844 59.0293 16.9844  c
58.6022 16.9844 58.2428 17.1484 57.9512 17.4766  c
57.6595 17.8047 57.5137 18.2760 57.5137 18.8906  c
h
68.9531 17.6094 m
67.3438 17.9062 l
67.2812 17.5833 67.1536 17.3411 66.9609 17.1797  c
66.7682 17.0182 66.5208 16.9375 66.2188 16.9375  c
65.8021 16.9375 65.4714 17.0781 65.2266 17.3594  c
64.9818 17.6406 64.8594 18.1146 64.8594 18.7812  c
64.8594 19.5208 64.9844 20.0417 65.2344 20.3438  c
65.4844 20.6458 65.8177 20.7969 66.2344 20.7969  c
66.5469 20.7969 66.8021 20.7083 67.0000 20.5312  c
67.1979 20.3542 67.3385 20.0469 67.4219 19.6094  c
69.0469 19.8906 l
68.8802 20.6302 68.5573 21.1901 68.0781 21.5703  c
67.5990 21.9505 66.9583 22.1406 66.1562 22.1406  c
65.2500 22.1406 64.5260 21.8542 63.9844 21.2812  c
63.4427 20.7083 63.1719 19.9115 63.1719 18.8906  c
63.1719 17.8698 63.4427 17.0729 63.9844 16.5000  c
64.5260 15.9271 65.2604 15.6406 66.1875 15.6406  c
66.9479 15.6406 67.5521 15.8021 68.0000 16.1250  c
68.4479 16.4479 68.7656 16.9427 68.9531 17.6094  c
h
73.8145 20.0156 m
75.4551 20.2969 l
75.2467 20.9010 74.9134 21.3594 74.4551 21.6719  c
73.9967 21.9844 73.4290 22.1406 72.7520 22.1406  c
71.6686 22.1406 70.8665 21.7865 70.3457 21.0781  c
69.9290 20.5156 69.7207 19.8021 69.7207 18.9375  c
69.7207 17.9062 69.9915 17.0990 70.5332 16.5156  c
71.0749 15.9323 71.7572 15.6406 72.5801 15.6406  c
73.5072 15.6406 74.2389 15.9453 74.7754 16.5547  c
75.3118 17.1641 75.5645 18.0990 75.5332 19.3594  c
71.4082 19.3594 l
71.4290 19.8490 71.5645 20.2292 71.8145 20.5000  c
72.0645 20.7708 72.3822 20.9062 72.7676 20.9062  c
73.0176 20.9062 73.2311 20.8359 73.4082 20.6953  c
73.5853 20.5547 73.7207 20.3281 73.8145 20.0156  c
h
73.9082 18.3594 m
73.8978 17.8802 73.7754 17.5156 73.5410 17.2656  c
73.3066 17.0156 73.0176 16.8906 72.6738 16.8906  c
72.3197 16.8906 72.0228 17.0208 71.7832 17.2812  c
71.5540 17.5521 71.4395 17.9115 71.4395 18.3594  c
73.9082 18.3594 l
h
76.3008 20.2188 m
77.9570 19.9688 l
78.0299 20.2917 78.1732 20.5365 78.3867 20.7031  c
78.6003 20.8698 78.8997 20.9531 79.2852 20.9531  c
79.7122 20.9531 80.0299 20.8750 80.2383 20.7188  c
80.3841 20.6042 80.4570 20.4583 80.4570 20.2812  c
80.4570 20.1562 80.4206 20.0521 80.3477 19.9688  c
80.2643 19.8854 80.0820 19.8125 79.8008 19.7500  c
78.4674 19.4583 77.6237 19.1927 77.2695 18.9531  c
76.7799 18.6094 76.5352 18.1406 76.5352 17.5469  c
76.5352 17.0052 76.7461 16.5521 77.1680 16.1875  c
77.5898 15.8229 78.2487 15.6406 79.1445 15.6406  c
79.9987 15.6406 80.6341 15.7786 81.0508 16.0547  c
81.4674 16.3307 81.7539 16.7396 81.9102 17.2812  c
80.3477 17.5625 l
80.2852 17.3229 80.1602 17.1380 79.9727 17.0078  c
79.7852 16.8776 79.5195 16.8125 79.1758 16.8125  c
78.7487 16.8125 78.4414 16.8750 78.2539 17.0000  c
78.1289 17.0833 78.0664 17.1927 78.0664 17.3281  c
78.0664 17.4531 78.1185 17.5573 78.2227 17.6406  c
78.3685 17.7448 78.8815 17.8958 79.7617 18.0938  c
80.6419 18.2917 81.2539 18.5365 81.5977 18.8281  c
81.9414 19.1198 82.1133 19.5260 82.1133 20.0469  c
82.1133 20.6198 81.8763 21.1120 81.4023 21.5234  c
80.9284 21.9349 80.2227 22.1406 79.2852 22.1406  c
78.4414 22.1406 77.7721 21.9688 77.2773 21.6250  c
76.7826 21.2812 76.4570 20.8125 76.3008 20.2188  c
h
82.9746 20.2188 m
84.6309 19.9688 l
84.7038 20.2917 84.8470 20.5365 85.0605 20.7031  c
85.2741 20.8698 85.5736 20.9531 85.9590 20.9531  c
86.3861 20.9531 86.7038 20.8750 86.9121 20.7188  c
87.0579 20.6042 87.1309 20.4583 87.1309 20.2812  c
87.1309 20.1562 87.0944 20.0521 87.0215 19.9688  c
86.9382 19.8854 86.7559 19.8125 86.4746 19.7500  c
85.1413 19.4583 84.2975 19.1927 83.9434 18.9531  c
83.4538 18.6094 83.2090 18.1406 83.2090 17.5469  c
83.2090 17.0052 83.4199 16.5521 83.8418 16.1875  c
84.2637 15.8229 84.9225 15.6406 85.8184 15.6406  c
86.6725 15.6406 87.3079 15.7786 87.7246 16.0547  c
88.1413 16.3307 88.4277 16.7396 88.5840 17.2812  c
87.0215 17.5625 l
86.9590 17.3229 86.8340 17.1380 86.6465 17.0078  c
86.4590 16.8776 86.1934 16.8125 85.8496 16.8125  c
85.4225 16.8125 85.1152 16.8750 84.9277 17.0000  c
84.8027 17.0833 84.7402 17.1927 84.7402 17.3281  c
84.7402 17.4531 84.7923 17.5573 84.8965 17.6406  c
85.0423 17.7448 85.5553 17.8958 86.4355 18.0938  c
87.3158 18.2917 87.9277 18.5365 88.2715 18.8281  c
88.6152 19.1198 88.7871 19.5260 88.7871 20.0469  c
88.7871 20.6198 88.5501 21.1120 88.0762 21.5234  c
87.6022 21.9349 86.8965 22.1406 85.9590 22.1406  c
85.1152 22.1406 84.4460 21.9688 83.9512 21.6250  c
83.4564 21.2812 83.1309 20.8125 82.9746 20.2188  c
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 10.0 0.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
0.00000 0.00000 m
10.0000 0.00000 l
10.0000 662.000 l
0.00000 662.000 l
0.00000 0.00000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 0.0 0.0 10.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
0.00000 0.00000 m
1095.00 0.00000 l
1095.00 10.0000 l
10.0000 10.0000 l
h
f
.250980 .250980 .250980 RG
1 J
1 j
newpath
0.00000 0.00000 m
1095.00 0.00000 l
1095.00 662.000 l
0.00000 662.000 l
0.00000 0.00000 l
h
S
.870588 .854902 .925490 RG
newpath
112.000 75.0000 m
202.000 75.0000 l
202.000 135.000 l
112.000 135.000 l
112.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 75.0 0.0 202.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.77254903 0.75686276 0.827451]
         /C1 [0.87058824 0.85490197 0.9254902]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
112.000 75.0000 m
202.000 75.0000 l
202.000 75.0000 l
112.000 75.0000 l
112.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 75.0 0.0 79.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.87058824 0.85490197 0.9254902]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
112.000 75.0000 m
202.000 75.0000 l
202.000 79.0000 l
112.000 79.0000 l
112.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 79.0 0.0 86.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.87058824 0.85490197 0.9254902]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
112.000 79.0000 m
202.000 79.0000 l
202.000 86.0000 l
112.000 86.0000 l
112.000 79.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 86.0 0.0 93.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.87058824 0.85490197 0.9254902]
         /C1 [0.5372549 0.5294118 0.5764706]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
112.000 86.0000 m
202.000 86.0000 l
202.000 93.0000 l
112.000 93.0000 l
112.000 86.0000 l
h
f
.250980 .250980 .250980 RG
newpath
112.000 75.0000 m
202.000 75.0000 l
202.000 135.000 l
112.000 135.000 l
112.000 75.0000 l
h
S
.423529 .415686 .450980 RG
newpath
116.812 87.0000 m
116.812 79.1250 l
120.156 79.1250 l
121.000 79.1250 121.612 79.1953 121.992 79.3359  c
122.372 79.4766 122.677 79.7292 122.906 80.0938  c
123.135 80.4583 123.250 80.8698 123.250 81.3281  c
123.250 81.9219 123.076 82.4115 122.727 82.7969  c
122.378 83.1823 121.859 83.4271 121.172 83.5312  c
121.516 83.7292 121.799 83.9479 122.023 84.1875  c
122.247 84.4271 122.547 84.8542 122.922 85.4688  c
123.891 87.0000 l
121.984 87.0000 l
120.828 85.2812 l
120.422 84.6771 120.143 84.2943 119.992 84.1328  c
119.841 83.9714 119.682 83.8620 119.516 83.8047  c
119.349 83.7474 119.083 83.7188 118.719 83.7188  c
118.391 83.7188 l
118.391 87.0000 l
116.812 87.0000 l
h
118.391 82.4531 m
119.578 82.4531 l
120.339 82.4531 120.812 82.4219 121.000 82.3594  c
121.188 82.2969 121.336 82.1875 121.445 82.0312  c
121.555 81.8750 121.609 81.6771 121.609 81.4375  c
121.609 81.1667 121.539 80.9505 121.398 80.7891  c
121.258 80.6276 121.057 80.5260 120.797 80.4844  c
120.672 80.4635 120.286 80.4531 119.641 80.4531  c
118.391 80.4531 l
118.391 82.4531 l
h
128.038 85.1875 m
129.538 85.4375 l
129.350 85.9896 129.048 86.4089 128.631 86.6953  c
128.215 86.9818 127.689 87.1250 127.053 87.1250  c
126.064 87.1250 125.329 86.8021 124.850 86.1562  c
124.475 85.6354 124.288 84.9792 124.288 84.1875  c
124.288 83.2396 124.535 82.5000 125.030 81.9688  c
125.525 81.4375 126.152 81.1719 126.913 81.1719  c
127.756 81.1719 128.423 81.4505 128.913 82.0078  c
129.402 82.5651 129.637 83.4219 129.616 84.5781  c
125.834 84.5781 l
125.845 85.0260 125.967 85.3750 126.202 85.6250  c
126.436 85.8750 126.725 86.0000 127.069 86.0000  c
127.308 86.0000 127.509 85.9349 127.670 85.8047  c
127.832 85.6745 127.954 85.4688 128.038 85.1875  c
h
128.116 83.6562 m
128.105 83.2188 127.993 82.8880 127.780 82.6641  c
127.566 82.4401 127.308 82.3281 127.006 82.3281  c
126.673 82.3281 126.397 82.4479 126.178 82.6875  c
125.970 82.9271 125.866 83.2500 125.866 83.6562  c
128.116 83.6562 l
h
131.983 83.0312 m
130.608 82.7812 l
130.765 82.2396 131.030 81.8359 131.405 81.5703  c
131.780 81.3047 132.338 81.1719 133.077 81.1719  c
133.754 81.1719 134.257 81.2500 134.585 81.4062  c
134.913 81.5625 135.145 81.7630 135.280 82.0078  c
135.416 82.2526 135.483 82.7031 135.483 83.3594  c
135.468 85.1250 l
135.468 85.6250 135.491 85.9948 135.538 86.2344  c
135.585 86.4740 135.676 86.7292 135.812 87.0000  c
134.312 87.0000 l
134.270 86.8958 134.223 86.7448 134.171 86.5469  c
134.150 86.4635 134.134 86.4062 134.124 86.3750  c
133.864 86.6250 133.585 86.8125 133.288 86.9375  c
132.991 87.0625 132.676 87.1250 132.343 87.1250  c
131.759 87.1250 131.299 86.9661 130.960 86.6484  c
130.621 86.3307 130.452 85.9271 130.452 85.4375  c
130.452 85.1146 130.530 84.8281 130.687 84.5781  c
130.843 84.3281 131.059 84.1354 131.335 84.0000  c
131.611 83.8646 132.009 83.7448 132.530 83.6406  c
133.239 83.5156 133.728 83.3958 133.999 83.2812  c
133.999 83.1250 l
133.999 82.8333 133.926 82.6276 133.780 82.5078  c
133.634 82.3880 133.364 82.3281 132.968 82.3281  c
132.707 82.3281 132.502 82.3802 132.351 82.4844  c
132.200 82.5885 132.077 82.7708 131.983 83.0312  c
h
133.999 84.2656 m
133.801 84.3281 133.494 84.4036 133.077 84.4922  c
132.660 84.5807 132.390 84.6667 132.265 84.7500  c
132.067 84.8958 131.968 85.0729 131.968 85.2812  c
131.968 85.5000 132.046 85.6849 132.202 85.8359  c
132.358 85.9870 132.556 86.0625 132.796 86.0625  c
133.067 86.0625 133.327 85.9740 133.577 85.7969  c
133.765 85.6615 133.884 85.4948 133.937 85.2969  c
133.978 85.1719 133.999 84.9271 133.999 84.5625  c
133.999 84.2656 l
h
142.195 87.0000 m
140.804 87.0000 l
140.804 86.1562 l
140.565 86.4896 140.286 86.7344 139.968 86.8906  c
139.651 87.0469 139.335 87.1250 139.023 87.1250  c
138.367 87.1250 137.804 86.8620 137.335 86.3359  c
136.867 85.8099 136.632 85.0729 136.632 84.1250  c
136.632 83.1562 136.859 82.4219 137.312 81.9219  c
137.765 81.4219 138.341 81.1719 139.039 81.1719  c
139.674 81.1719 140.226 81.4375 140.695 81.9688  c
140.695 79.1250 l
142.195 79.1250 l
142.195 87.0000 l
h
138.179 84.0312 m
138.179 84.6354 138.263 85.0729 138.429 85.3438  c
138.669 85.7396 139.007 85.9375 139.445 85.9375  c
139.789 85.9375 140.083 85.7891 140.328 85.4922  c
140.572 85.1953 140.695 84.7552 140.695 84.1719  c
140.695 83.5156 140.578 83.0443 140.343 82.7578  c
140.109 82.4714 139.804 82.3281 139.429 82.3281  c
139.075 82.3281 138.778 82.4688 138.539 82.7500  c
138.299 83.0312 138.179 83.4583 138.179 84.0312  c
h
151.798 84.1094 m
153.330 84.5938 l
153.100 85.4479 152.710 86.0859 152.158 86.5078  c
151.606 86.9297 150.908 87.1406 150.064 87.1406  c
149.022 87.1406 148.163 86.7812 147.486 86.0625  c
146.809 85.3438 146.470 84.3646 146.470 83.1250  c
146.470 81.8229 146.809 80.8073 147.486 80.0781  c
148.163 79.3490 149.054 78.9844 150.158 78.9844  c
151.126 78.9844 151.908 79.2708 152.501 79.8438  c
152.866 80.1771 153.137 80.6615 153.314 81.2969  c
151.736 81.6719 l
151.642 81.2656 151.449 80.9427 151.158 80.7031  c
150.866 80.4635 150.507 80.3438 150.080 80.3438  c
149.496 80.3438 149.022 80.5547 148.658 80.9766  c
148.293 81.3984 148.111 82.0781 148.111 83.0156  c
148.111 84.0052 148.291 84.7135 148.650 85.1406  c
149.009 85.5677 149.475 85.7812 150.048 85.7812  c
150.475 85.7812 150.840 85.6458 151.142 85.3750  c
151.444 85.1042 151.663 84.6823 151.798 84.1094  c
h
154.289 84.4375 m
155.836 84.2812 l
155.930 84.8021 156.120 85.1849 156.406 85.4297  c
156.693 85.6745 157.076 85.7969 157.555 85.7969  c
158.076 85.7969 158.464 85.6875 158.719 85.4688  c
158.974 85.2500 159.102 85.0000 159.102 84.7188  c
159.102 84.5312 159.047 84.3724 158.938 84.2422  c
158.828 84.1120 158.638 83.9948 158.367 83.8906  c
158.180 83.8281 157.758 83.7135 157.102 83.5469  c
156.247 83.3385 155.648 83.0781 155.305 82.7656  c
154.826 82.3385 154.586 81.8125 154.586 81.1875  c
154.586 80.7917 154.698 80.4193 154.922 80.0703  c
155.146 79.7214 155.471 79.4531 155.898 79.2656  c
156.326 79.0781 156.846 78.9844 157.461 78.9844  c
158.440 78.9844 159.180 79.2031 159.680 79.6406  c
160.180 80.0781 160.445 80.6562 160.477 81.3750  c
158.883 81.4531 l
158.810 81.0469 158.664 80.7552 158.445 80.5781  c
158.227 80.4010 157.893 80.3125 157.445 80.3125  c
156.977 80.3125 156.612 80.4062 156.352 80.5938  c
156.185 80.7188 156.102 80.8802 156.102 81.0781  c
156.102 81.2656 156.180 81.4271 156.336 81.5625  c
156.534 81.7292 157.021 81.9036 157.797 82.0859  c
158.573 82.2682 159.146 82.4557 159.516 82.6484  c
159.885 82.8411 160.174 83.1068 160.383 83.4453  c
160.591 83.7839 160.695 84.2031 160.695 84.7031  c
160.695 85.1615 160.570 85.5859 160.320 85.9766  c
160.070 86.3672 159.716 86.6589 159.258 86.8516  c
158.799 87.0443 158.227 87.1406 157.539 87.1406  c
156.549 87.1406 155.786 86.9115 155.250 86.4531  c
154.714 85.9948 154.393 85.3229 154.289 84.4375  c
h
164.048 87.0000 m
161.235 79.1250 l
162.954 79.1250 l
164.954 84.9531 l
166.876 79.1250 l
168.563 79.1250 l
165.735 87.0000 l
164.048 87.0000 l
h
f
gsave /DeviceRGB setcolorspace
[ 24.0000 0.00000 0.00000 24.0000 145.000 97.0000 ] concat
<<
/ImageType 1
/Width 24  /Height 24
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [24 0 0 24 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat&Kq+mH'*!bst@`acZqdFJ/1bQD/=M$rf@C+7f1J?9,cHW,Ag4D8.'N)#'O@rPL&6'4+6h$HWWX)oG
%g3UY:r!GMYgc]hdWWgn^5ItR[]\*?SL;bTjS?IZrHsYR(toN"GI@Uckk:`=<_P%p4I5NZ%9d9Dj`5\'
9c33i40&:N%8VL,L>7OlF+:,8?7Ri;h3Fj:oP@\N54V[50<e+6`&S?&"0^CPQ]V!Og7*M'1P]K#M!%S"
e95;lLW7&09u7"2lQnQ*0Ht`=l?2<4%[\>/=D9pgloq*3p+_.$r%2I_6@\A-datC;5\`>1B7<p&Ss;+(
(,S6/^SQf92#\=froW9n<$s-RjVDhkFK]5N!"A<hV<u(e$q29j$.hbHkR6(*hlqo6"Lu#Z;Ue0`Oo$'5
S!H/Lq7q:=43T^*%ph:L3JkY:eT[Ea]HENLNC0dPagGL"F^2SWs$!UYZcaq/=51T%E+_r*Gl1>YE/RqK
`5\pbZB[hF2&^(dagT1(*EV[S8&`h=^>GIOs#Y0M+R^DjdRY,/\b+-u=r/Au.4TE'gFQ!>K(edDojK;n
)t+P#]h`tNPg)=AH;%,tMfW[?),$ff1E1+*cS8daIi'5,pJH%SVc4G(h's&Z#)75\s4PJ:8H,[$OkZb`
)heB_$ktE*7>+Z<dch'+=#S?DpQnBI?Vs%Da:HJ7P&X0%K:k^p@E^1>*=H2'83W]DZ['-M7>5orN6[3P
WBV3ZP7+DK24S2.X?rJG0m_e0m_(:E55_AsSPk![X/9m4.O7BCPZ)s_F@^^$#$WmkT[kb.\5F$#Ih1.m
;,5D'dr695JL<rHG$RG+4-TC;q7JB0WuqPE"j`;hpC-6:o(0r8`9b?"4-j(5hgMcp%?6fWKS/;bm&ou$
1*#2elrJ\a7"]#95EW.bEFifa2l]UYhCuR+5WDA&<l'ncTJ1u0HTTRIrLrERd%2ntkOsTF<]sW=9r+3\
#aR!AA;_rV3_Pk]*;OPJS"c"m>$`i`14^ZAb!I(.<Ag"`hi;2VgZ8aQ]KpK=ZFo<U]0,cr^WX6!YcT?%
:"#^aq8`tq-NeDk=<^O<-Q5O0,L&.@)[E)u4TVV<]=>FdEbnk6*cNpIliuQ-<nHElb,E^bRC*rLmcnBj
kj&L_FS)Kf7kQmSNu&1"@G'.ZT[r=/#N^9<;f?[$gXjG>%dgoGb\5VP=ht_ER9)[](kD)j$t4W(]Ys6n
r;3q][#%?GH9@J7m?Bc&1e]G[7ZDSn@2Y#7`3;B!GX4K0#$:;MC&2TjF?q!6*3QEQT;M"R1\9`ETbml/
;:RPsm1RCZo^JqN274^])>_C5@!E5i6#Z3d6QfI^4=<._Xpq"89[@Be/ZFD"3&6IHma]Qrjt+c?LDb&q
CYa4*T?hL.N]"f60S.f2.)XoeKY,jFhtl#uTB6.5~>

grestore
.698039 .635294 .913725 RG
1.30000 w
newpath
209.000 104.000 m
224.000 104.000 224.000 104.000 224.000 104.000  c
224.000 104.000 224.000 104.000 239.000 104.000  c
S
1.00000 w
1.00000 1.00000 1.00000 RG
newpath
112.000 98.0000 m
108.686 98.0000 106.000 100.686 106.000 104.000  c
112.000 104.000 l
h
f
.600000 .298039 .749020 RG
newpath
106.000 104.000 m
106.000 107.314 108.686 110.000 112.000 110.000  c
112.000 104.000 l
h
f
.250980 .250980 .250980 RG
newpath
112.000 98.0000 m
108.686 98.0000 106.000 100.686 106.000 104.000  c
106.000 107.314 108.686 110.000 112.000 110.000  c
112.000 104.000 l
h
S
.423529 .415686 .450980 RG
newpath
118.781 107.000 m
118.781 102.953 l
118.078 102.953 l
118.078 102.328 l
118.781 102.328 l
118.781 101.844 l
118.781 101.521 118.807 101.286 118.859 101.141  c
118.943 100.932 119.081 100.766 119.273 100.641  c
119.466 100.516 119.734 100.453 120.078 100.453  c
120.297 100.453 120.542 100.479 120.812 100.531  c
120.688 101.219 l
120.531 101.188 120.380 101.172 120.234 101.172  c
119.995 101.172 119.823 101.224 119.719 101.328  c
119.615 101.432 119.562 101.625 119.562 101.906  c
119.562 102.328 l
120.484 102.328 l
120.484 102.953 l
119.562 102.953 l
119.562 107.000 l
118.781 107.000 l
h
121.094 101.469 m
121.094 100.562 l
121.891 100.562 l
121.891 101.469 l
121.094 101.469 l
h
121.094 107.000 m
121.094 102.328 l
121.891 102.328 l
121.891 107.000 l
121.094 107.000 l
h
123.078 107.000 m
123.078 100.562 l
123.859 100.562 l
123.859 107.000 l
123.078 107.000 l
h
f
.698039 .635294 .913725 RG
newpath
202.000 110.000 m
205.314 110.000 208.000 107.314 208.000 104.000  c
208.000 100.686 205.314 98.0000 202.000 98.0000  c
202.000 104.000 l
h
f
.250980 .250980 .250980 RG
newpath
202.000 110.000 m
205.314 110.000 208.000 107.314 208.000 104.000  c
208.000 100.686 205.314 98.0000 202.000 98.0000  c
202.000 104.000 l
h
S
.423529 .415686 .450980 RG
newpath
187.297 104.672 m
187.297 103.807 187.536 103.167 188.016 102.750  c
188.422 102.406 188.911 102.234 189.484 102.234  c
190.130 102.234 190.656 102.443 191.062 102.859  c
191.469 103.276 191.672 103.854 191.672 104.594  c
191.672 105.198 191.581 105.672 191.398 106.016  c
191.216 106.359 190.953 106.628 190.609 106.820  c
190.266 107.013 189.891 107.109 189.484 107.109  c
188.828 107.109 188.299 106.898 187.898 106.477  c
187.497 106.055 187.297 105.453 187.297 104.672  c
h
188.109 104.672 m
188.109 105.266 188.240 105.711 188.500 106.008  c
188.760 106.305 189.089 106.453 189.484 106.453  c
189.880 106.453 190.208 106.305 190.469 106.008  c
190.729 105.711 190.859 105.255 190.859 104.641  c
190.859 104.068 190.729 103.630 190.469 103.328  c
190.208 103.026 189.880 102.875 189.484 102.875  c
189.089 102.875 188.760 103.023 188.500 103.320  c
188.240 103.617 188.109 104.068 188.109 104.672  c
h
195.662 107.000 m
195.662 106.312 l
195.297 106.844 194.802 107.109 194.177 107.109  c
193.906 107.109 193.651 107.055 193.412 106.945  c
193.172 106.836 192.992 106.703 192.873 106.547  c
192.753 106.391 192.672 106.198 192.630 105.969  c
192.599 105.812 192.583 105.562 192.583 105.219  c
192.583 102.328 l
193.365 102.328 l
193.365 104.922 l
193.365 105.339 193.386 105.615 193.427 105.750  c
193.469 105.958 193.570 106.122 193.732 106.242  c
193.893 106.362 194.094 106.422 194.333 106.422  c
194.573 106.422 194.797 106.362 195.005 106.242  c
195.214 106.122 195.360 105.958 195.443 105.750  c
195.526 105.542 195.568 105.234 195.568 104.828  c
195.568 102.328 l
196.365 102.328 l
196.365 107.000 l
195.662 107.000 l
h
199.339 106.297 m
199.448 106.984 l
199.219 107.036 199.021 107.062 198.854 107.062  c
198.563 107.062 198.339 107.016 198.183 106.922  c
198.026 106.828 197.914 106.708 197.847 106.562  c
197.779 106.417 197.745 106.109 197.745 105.641  c
197.745 102.953 l
197.167 102.953 l
197.167 102.328 l
197.745 102.328 l
197.745 101.172 l
198.542 100.703 l
198.542 102.328 l
199.339 102.328 l
199.339 102.953 l
198.542 102.953 l
198.542 105.672 l
198.542 105.901 198.555 106.047 198.581 106.109  c
198.607 106.172 198.651 106.224 198.714 106.266  c
198.776 106.307 198.865 106.328 198.979 106.328  c
199.073 106.328 199.193 106.318 199.339 106.297  c
h
f
gsave /DeviceRGB setcolorspace
[ 16.0000 0.00000 0.00000 16.0000 115.000 118.000 ] concat
<<
/ImageType 1
/Width 16  /Height 16
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [16 0 0 16 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gas-Vk0lu7ULu7;!td7;B.]`ciGZeU^^NUr#*=a5EI(ojX>>>qBCqFr?.7BtA9Gr8\Hi0=Ypu?WG+P3?
DqWpqk2iG!98aaU(',<7o?ua5H0;<!O/^t^ai_%q/SAs'mbI;`q2moFA7X!rZ`d5I8[cM.TOsS$gB@2j
=]VL0?*]fC!YLLpjLY#"!2\&T&*3"&8-LY)8mZ@=[+Vd#]78pcIiot]Q#6"',Mba:bi&%DFpqSl;LH9\
j$_,PZ`0/6-F]V'.QZK&^;e+#`!Ook96MqnWDb6/mlf]Kk,O3u5W&F77`bgP]6`!R3u;B9U5E*-c5i?2
QNL=(.UVkSXSQsfF/L?]&5NukgUf;Dg"if7h7d&5a8g7;8e8,^!tkL\+V4YS+7)G6~>

grestore
.847059 .913725 .803922 RG
newpath
246.000 75.0000 m
336.000 75.0000 l
336.000 151.000 l
246.000 151.000 l
246.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 75.0 0.0 336.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7490196 0.8156863 0.7058824]
         /C1 [0.84705883 0.9137255 0.8039216]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
246.000 75.0000 m
336.000 75.0000 l
336.000 75.0000 l
246.000 75.0000 l
246.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 75.0 0.0 79.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.84705883 0.9137255 0.8039216]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
246.000 75.0000 m
336.000 75.0000 l
336.000 79.0000 l
246.000 79.0000 l
246.000 75.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 79.0 0.0 86.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [0.84705883 0.9137255 0.8039216]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
246.000 79.0000 m
336.000 79.0000 l
336.000 86.0000 l
246.000 86.0000 l
246.000 79.0000 l
h
f
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [0.0 86.0 0.0 93.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.84705883 0.9137255 0.8039216]
         /C1 [0.52156866 0.5686275 0.49019608]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
246.000 86.0000 m
336.000 86.0000 l
336.000 93.0000 l
246.000 93.0000 l
246.000 86.0000 l
h
f
.250980 .250980 .250980 RG
newpath
246.000 75.0000 m
336.000 75.0000 l
336.000 151.000 l
246.000 151.000 l
246.000 75.0000 l
h
S
.411765 .447059 .392157 RG
newpath
250.797 79.1250 m
253.703 79.1250 l
254.359 79.1250 254.859 79.1771 255.203 79.2812  c
255.661 79.4167 256.055 79.6562 256.383 80.0000  c
256.711 80.3438 256.961 80.7682 257.133 81.2734  c
257.305 81.7786 257.391 82.4010 257.391 83.1406  c
257.391 83.7865 257.312 84.3438 257.156 84.8125  c
256.958 85.3854 256.677 85.8490 256.312 86.2031  c
256.031 86.4740 255.656 86.6823 255.188 86.8281  c
254.844 86.9427 254.375 87.0000 253.781 87.0000  c
250.797 87.0000 l
250.797 79.1250 l
h
252.391 80.4531 m
252.391 85.6719 l
253.578 85.6719 l
254.016 85.6719 254.333 85.6458 254.531 85.5938  c
254.792 85.5312 255.008 85.4245 255.180 85.2734  c
255.352 85.1224 255.490 84.8698 255.594 84.5156  c
255.698 84.1615 255.750 83.6771 255.750 83.0625  c
255.750 82.4583 255.698 81.9922 255.594 81.6641  c
255.490 81.3359 255.339 81.0807 255.141 80.8984  c
254.943 80.7161 254.698 80.5938 254.406 80.5312  c
254.188 80.4792 253.750 80.4531 253.094 80.4531  c
252.391 80.4531 l
h
262.038 85.1875 m
263.538 85.4375 l
263.350 85.9896 263.048 86.4089 262.631 86.6953  c
262.215 86.9818 261.689 87.1250 261.053 87.1250  c
260.064 87.1250 259.329 86.8021 258.850 86.1562  c
258.475 85.6354 258.288 84.9792 258.288 84.1875  c
258.288 83.2396 258.535 82.5000 259.030 81.9688  c
259.525 81.4375 260.152 81.1719 260.913 81.1719  c
261.756 81.1719 262.423 81.4505 262.913 82.0078  c
263.402 82.5651 263.637 83.4219 263.616 84.5781  c
259.834 84.5781 l
259.845 85.0260 259.967 85.3750 260.202 85.6250  c
260.436 85.8750 260.725 86.0000 261.069 86.0000  c
261.308 86.0000 261.509 85.9349 261.670 85.8047  c
261.832 85.6745 261.954 85.4688 262.038 85.1875  c
h
262.116 83.6562 m
262.105 83.2188 261.993 82.8880 261.780 82.6641  c
261.566 82.4401 261.308 82.3281 261.006 82.3281  c
260.673 82.3281 260.397 82.4479 260.178 82.6875  c
259.970 82.9271 259.866 83.2500 259.866 83.6562  c
262.116 83.6562 l
h
269.827 82.9844 m
268.343 83.2500 l
268.291 82.9583 268.176 82.7370 267.999 82.5859  c
267.822 82.4349 267.593 82.3594 267.312 82.3594  c
266.937 82.3594 266.637 82.4870 266.413 82.7422  c
266.189 82.9974 266.077 83.4323 266.077 84.0469  c
266.077 84.7240 266.189 85.2031 266.413 85.4844  c
266.637 85.7656 266.942 85.9062 267.327 85.9062  c
267.619 85.9062 267.856 85.8229 268.038 85.6562  c
268.220 85.4896 268.348 85.2083 268.421 84.8125  c
269.905 85.0625 l
269.749 85.7500 269.452 86.2656 269.015 86.6094  c
268.577 86.9531 267.994 87.1250 267.265 87.1250  c
266.421 87.1250 265.752 86.8620 265.257 86.3359  c
264.762 85.8099 264.515 85.0833 264.515 84.1562  c
264.515 83.2083 264.765 82.4740 265.265 81.9531  c
265.765 81.4323 266.437 81.1719 267.280 81.1719  c
267.978 81.1719 268.533 81.3203 268.944 81.6172  c
269.356 81.9141 269.650 82.3698 269.827 82.9844  c
h
270.976 80.5156 m
270.976 79.1250 l
272.476 79.1250 l
272.476 80.5156 l
270.976 80.5156 l
h
270.976 87.0000 m
270.976 81.2969 l
272.476 81.2969 l
272.476 87.0000 l
270.976 87.0000 l
h
273.501 85.3750 m
275.001 85.1406 l
275.074 85.4323 275.207 85.6536 275.399 85.8047  c
275.592 85.9557 275.866 86.0312 276.220 86.0312  c
276.616 86.0312 276.912 85.9635 277.110 85.8281  c
277.246 85.7240 277.313 85.5885 277.313 85.4219  c
277.313 85.3073 277.277 85.2135 277.204 85.1406  c
277.121 85.0677 276.949 85.0000 276.688 84.9375  c
275.480 84.6667 274.709 84.4219 274.376 84.2031  c
273.928 83.8906 273.704 83.4635 273.704 82.9219  c
273.704 82.4219 273.899 82.0052 274.290 81.6719  c
274.681 81.3385 275.287 81.1719 276.110 81.1719  c
276.892 81.1719 277.470 81.2969 277.845 81.5469  c
278.220 81.7969 278.480 82.1719 278.626 82.6719  c
277.204 82.9375 l
277.142 82.7188 277.027 82.5495 276.860 82.4297  c
276.694 82.3099 276.449 82.2500 276.126 82.2500  c
275.730 82.2500 275.449 82.3073 275.282 82.4219  c
275.168 82.4948 275.110 82.5938 275.110 82.7188  c
275.110 82.8333 275.157 82.9271 275.251 83.0000  c
275.386 83.1042 275.858 83.2474 276.665 83.4297  c
277.472 83.6120 278.032 83.8333 278.345 84.0938  c
278.668 84.3646 278.829 84.7396 278.829 85.2188  c
278.829 85.7396 278.610 86.1875 278.173 86.5625  c
277.735 86.9375 277.084 87.1250 276.220 87.1250  c
275.449 87.1250 274.837 86.9688 274.384 86.6562  c
273.931 86.3438 273.636 85.9167 273.501 85.3750  c
h
280.150 80.5156 m
280.150 79.1250 l
281.650 79.1250 l
281.650 80.5156 l
280.150 80.5156 l
h
280.150 87.0000 m
280.150 81.2969 l
281.650 81.2969 l
281.650 87.0000 l
280.150 87.0000 l
h
282.847 84.0625 m
282.847 83.5625 282.972 83.0781 283.222 82.6094  c
283.472 82.1406 283.823 81.7839 284.276 81.5391  c
284.729 81.2943 285.232 81.1719 285.784 81.1719  c
286.649 81.1719 287.357 81.4505 287.909 82.0078  c
288.461 82.5651 288.737 83.2708 288.737 84.1250  c
288.737 84.9896 288.459 85.7057 287.901 86.2734  c
287.344 86.8411 286.644 87.1250 285.800 87.1250  c
285.279 87.1250 284.782 87.0078 284.308 86.7734  c
283.834 86.5391 283.472 86.1927 283.222 85.7344  c
282.972 85.2760 282.847 84.7188 282.847 84.0625  c
h
284.394 84.1406 m
284.394 84.7135 284.529 85.1510 284.800 85.4531  c
285.071 85.7552 285.404 85.9062 285.800 85.9062  c
286.185 85.9062 286.513 85.7552 286.784 85.4531  c
287.055 85.1510 287.190 84.7135 287.190 84.1406  c
287.190 83.5781 287.055 83.1458 286.784 82.8438  c
286.513 82.5417 286.185 82.3906 285.800 82.3906  c
285.404 82.3906 285.071 82.5417 284.800 82.8438  c
284.529 83.1458 284.394 83.5781 284.394 84.1406  c
h
295.113 87.0000 m
293.597 87.0000 l
293.597 84.0938 l
293.597 83.4792 293.566 83.0807 293.503 82.8984  c
293.441 82.7161 293.337 82.5755 293.191 82.4766  c
293.045 82.3776 292.868 82.3281 292.660 82.3281  c
292.399 82.3281 292.165 82.3984 291.957 82.5391  c
291.748 82.6797 291.605 82.8672 291.527 83.1016  c
291.449 83.3359 291.410 83.7760 291.410 84.4219  c
291.410 87.0000 l
289.910 87.0000 l
289.910 81.2969 l
291.316 81.2969 l
291.316 82.1406 l
291.806 81.4948 292.431 81.1719 293.191 81.1719  c
293.524 81.1719 293.829 81.2318 294.105 81.3516  c
294.381 81.4714 294.589 81.6224 294.730 81.8047  c
294.871 81.9870 294.970 82.1979 295.027 82.4375  c
295.084 82.6771 295.113 83.0156 295.113 83.4531  c
295.113 87.0000 l
h
301.482 87.0000 m
301.482 80.4531 l
299.138 80.4531 l
299.138 79.1250 l
305.404 79.1250 l
305.404 80.4531 l
303.060 80.4531 l
303.060 87.0000 l
301.482 87.0000 l
h
307.857 87.0000 m
306.342 87.0000 l
306.342 81.2969 l
307.748 81.2969 l
307.748 82.1094 l
307.988 81.7240 308.204 81.4714 308.396 81.3516  c
308.589 81.2318 308.805 81.1719 309.045 81.1719  c
309.389 81.1719 309.722 81.2656 310.045 81.4531  c
309.576 82.7656 l
309.326 82.5990 309.092 82.5156 308.873 82.5156  c
308.654 82.5156 308.472 82.5755 308.326 82.6953  c
308.180 82.8151 308.066 83.0260 307.982 83.3281  c
307.899 83.6302 307.857 84.2656 307.857 85.2344  c
307.857 87.0000 l
h
313.998 85.1875 m
315.498 85.4375 l
315.310 85.9896 315.008 86.4089 314.591 86.6953  c
314.175 86.9818 313.649 87.1250 313.013 87.1250  c
312.024 87.1250 311.289 86.8021 310.810 86.1562  c
310.435 85.6354 310.248 84.9792 310.248 84.1875  c
310.248 83.2396 310.495 82.5000 310.990 81.9688  c
311.485 81.4375 312.112 81.1719 312.873 81.1719  c
313.716 81.1719 314.383 81.4505 314.873 82.0078  c
315.362 82.5651 315.597 83.4219 315.576 84.5781  c
311.794 84.5781 l
311.805 85.0260 311.927 85.3750 312.162 85.6250  c
312.396 85.8750 312.685 86.0000 313.029 86.0000  c
313.268 86.0000 313.469 85.9349 313.630 85.8047  c
313.792 85.6745 313.914 85.4688 313.998 85.1875  c
h
314.076 83.6562 m
314.065 83.2188 313.953 82.8880 313.740 82.6641  c
313.526 82.4401 313.268 82.3281 312.966 82.3281  c
312.633 82.3281 312.357 82.4479 312.138 82.6875  c
311.930 82.9271 311.826 83.2500 311.826 83.6562  c
314.076 83.6562 l
h
320.115 85.1875 m
321.615 85.4375 l
321.428 85.9896 321.126 86.4089 320.709 86.6953  c
320.292 86.9818 319.766 87.1250 319.131 87.1250  c
318.141 87.1250 317.407 86.8021 316.928 86.1562  c
316.553 85.6354 316.365 84.9792 316.365 84.1875  c
316.365 83.2396 316.613 82.5000 317.107 81.9688  c
317.602 81.4375 318.230 81.1719 318.990 81.1719  c
319.834 81.1719 320.501 81.4505 320.990 82.0078  c
321.480 82.5651 321.714 83.4219 321.693 84.5781  c
317.912 84.5781 l
317.923 85.0260 318.045 85.3750 318.279 85.6250  c
318.514 85.8750 318.803 86.0000 319.146 86.0000  c
319.386 86.0000 319.587 85.9349 319.748 85.8047  c
319.910 85.6745 320.032 85.4688 320.115 85.1875  c
h
320.193 83.6562 m
320.183 83.2188 320.071 82.8880 319.857 82.6641  c
319.644 82.4401 319.386 82.3281 319.084 82.3281  c
318.751 82.3281 318.475 82.4479 318.256 82.6875  c
318.048 82.9271 317.943 83.2500 317.943 83.6562  c
320.193 83.6562 l
h
f
gsave /DeviceRGB setcolorspace
[ 24.0000 0.00000 0.00000 24.0000 279.000 105.000 ] concat
<<
/ImageType 1
/Width 24  /Height 24
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [24 0 0 24 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gat&Jq,825!!i#nV:/fJ?_fo^RE;hXZq6hQeDgchRDpQX22s@.%$rT+Js[AbSR;jUL-l+p[iE7;kJAjp
.EAa8bt(0[2JSHD+!=$b^-B7hn%I&ZX,U0Q]^1/&*>&2'ca\F:loJ^:/C8p6<`e57cK?O6QQL3Rgq:u3
>Ahl?#rb>((pO5jJ2a?0"2$pc0V'_B("pcr]-"=#$^G\2k`4_/81%\,8/:Em8CiLW<0$0pl*VQ^4..U*
ljPTCUG"IgrPmu;`.__F%*-Nr0t^uh-3""@)B1H4JK@M"mAE`]lL3IN#+N);GcFSY.<iYF7"M9p$e8i5
?h)2-DDYkn-T7KngutZNZM'=(C5oB>c=>.@aT`U&X!TJ[\p8=:G4b%+rpDIAC;fX?+J-%G;k$N]TQJR,
`^d+uG#$B1";E@I_\meL?)YL7q![I&_kZ6fVldks;XGTe=.i+8jG>PT"&Ba#4[\RZ:=l*h1fq$$Bknh+
8Jc0e(/\e9SUE[^qeluuk:6upQ6i"7jq)UUd5sJDcCp1Z$RAC%-uK?ei$;_3d1fo%[Z3P!4AKG]XW@U?
(<BWZbV5]/pC6`J3TQKK?nu#dRsZZ7S1oP'U=)Gm3AcSVa(5ImJN.(jpZ?T^U"V:^/njFLDOB'c%8hJe
Mio_@lbdaN3#.=J+ZK\"Bb-Y`Ye7fAQr/,U(:6`7m<26ugn6Ft>$!gfDE:*eDj2r+R+mD!Ds`oT(g48%
Z4#DQR3&4\"SdH5Jp6Db7YeJt)a^3cZ9=EqD[/iH>*I_-99>':2MYiJA-A"*I$(U]%@KOA]qfipq.3K,
Bu>Nn<%N<sG/djkHh](0G/ZSYXLZP>/X.0\agmrRZ"Cme;H'Dm>C<R2aIQeB?Z(_KH#rf[qILX%I*%6\
.IKZ_C.Gp?YH=n+<OSiP2n]^[1K)1<&Me-k('>8WJZqaZ-AWiOq10tLLF3iiBV^Q%QZpO+IlKJL2$`Wi
$KW$W,oRVJnlti1]p*ja+_57r9K2&2o&[4$it4j!-34,`i:g.;G3\uo@k=f56-(Q`HTT7.0ZGJbc\1,&
G<0(A>;@jQ38I2dL<a1(LM-a_kk@85V[ep8"*am\hB[Fm+(oS3h<r#5eO(>ul-p$TfSuN8kYIRA=kp(0
DI1#"j2[d@ff%PFFi`KpW_iKgDZ@Cg^A[KBpHJeuYmWVm&,t%0=o~>

grestore
.592157 .749020 .560784 RG
1.30000 w
newpath
343.000 104.000 m
715.500 104.000 715.500 104.000 715.500 81.5000  c
715.500 59.0000 715.500 59.0000 1088.00 59.0000  c
S
.698039 .635294 .913725 RG
1.00000 w
newpath
246.000 98.0000 m
242.686 98.0000 240.000 100.686 240.000 104.000  c
246.000 104.000 l
h
f
newpath
240.000 104.000 m
240.000 107.314 242.686 110.000 246.000 110.000  c
246.000 104.000 l
h
f
.250980 .250980 .250980 RG
newpath
246.000 98.0000 m
242.686 98.0000 240.000 100.686 240.000 104.000  c
240.000 107.314 242.686 110.000 246.000 110.000  c
246.000 104.000 l
h
S
.411765 .447059 .392157 RG
newpath
254.328 106.297 m
254.438 106.984 l
254.208 107.036 254.010 107.062 253.844 107.062  c
253.552 107.062 253.328 107.016 253.172 106.922  c
253.016 106.828 252.904 106.708 252.836 106.562  c
252.768 106.417 252.734 106.109 252.734 105.641  c
252.734 102.953 l
252.156 102.953 l
252.156 102.328 l
252.734 102.328 l
252.734 101.172 l
253.531 100.703 l
253.531 102.328 l
254.328 102.328 l
254.328 102.953 l
253.531 102.953 l
253.531 105.672 l
253.531 105.901 253.544 106.047 253.570 106.109  c
253.596 106.172 253.641 106.224 253.703 106.266  c
253.766 106.307 253.854 106.328 253.969 106.328  c
254.062 106.328 254.182 106.318 254.328 106.297  c
h
255.079 107.000 m
255.079 102.328 l
255.797 102.328 l
255.797 103.047 l
255.974 102.714 256.141 102.495 256.297 102.391  c
256.454 102.286 256.625 102.234 256.813 102.234  c
257.073 102.234 257.344 102.318 257.625 102.484  c
257.344 103.219 l
257.157 103.104 256.964 103.047 256.766 103.047  c
256.599 103.047 256.446 103.099 256.305 103.203  c
256.165 103.307 256.063 103.453 256.000 103.641  c
255.917 103.922 255.875 104.229 255.875 104.562  c
255.875 107.000 l
255.079 107.000 l
h
261.138 106.422 m
260.847 106.672 260.565 106.849 260.294 106.953  c
260.024 107.057 259.732 107.109 259.419 107.109  c
258.909 107.109 258.516 106.984 258.240 106.734  c
257.964 106.484 257.826 106.161 257.826 105.766  c
257.826 105.536 257.878 105.328 257.982 105.141  c
258.086 104.953 258.222 104.802 258.388 104.688  c
258.555 104.573 258.742 104.484 258.951 104.422  c
259.107 104.391 259.341 104.354 259.654 104.312  c
260.300 104.240 260.774 104.146 261.076 104.031  c
261.076 103.927 261.076 103.859 261.076 103.828  c
261.076 103.505 261.003 103.281 260.857 103.156  c
260.649 102.969 260.347 102.875 259.951 102.875  c
259.576 102.875 259.300 102.940 259.123 103.070  c
258.945 103.201 258.815 103.432 258.732 103.766  c
257.966 103.672 l
258.029 103.339 258.141 103.070 258.302 102.867  c
258.464 102.664 258.698 102.508 259.005 102.398  c
259.313 102.289 259.664 102.234 260.060 102.234  c
260.466 102.234 260.792 102.281 261.037 102.375  c
261.281 102.469 261.464 102.586 261.583 102.727  c
261.703 102.867 261.784 103.047 261.826 103.266  c
261.857 103.401 261.873 103.641 261.873 103.984  c
261.873 105.047 l
261.873 105.776 261.888 106.240 261.919 106.438  c
261.951 106.635 262.018 106.823 262.123 107.000  c
261.294 107.000 l
261.211 106.833 261.159 106.641 261.138 106.422  c
h
261.076 104.656 m
260.784 104.771 260.352 104.870 259.779 104.953  c
259.456 105.005 259.227 105.060 259.091 105.117  c
258.956 105.174 258.852 105.260 258.779 105.375  c
258.706 105.490 258.669 105.615 258.669 105.750  c
258.669 105.958 258.748 106.133 258.904 106.273  c
259.060 106.414 259.294 106.484 259.607 106.484  c
259.909 106.484 260.180 106.417 260.419 106.281  c
260.659 106.146 260.836 105.964 260.951 105.734  c
261.034 105.557 261.076 105.297 261.076 104.953  c
261.076 104.656 l
h
f
.592157 .749020 .560784 RG
newpath
336.000 110.000 m
339.314 110.000 342.000 107.314 342.000 104.000  c
342.000 100.686 339.314 98.0000 336.000 98.0000  c
336.000 104.000 l
h
f
.250980 .250980 .250980 RG
newpath
336.000 110.000 m
339.314 110.000 342.000 107.314 342.000 104.000  c
342.000 100.686 339.314 98.0000 336.000 98.0000  c
336.000 104.000 l
h
S
.411765 .447059 .392157 RG
newpath
316.594 107.000 m
316.594 102.328 l
317.297 102.328 l
317.297 102.984 l
317.443 102.755 317.638 102.573 317.883 102.438  c
318.128 102.302 318.406 102.234 318.719 102.234  c
319.062 102.234 319.344 102.305 319.562 102.445  c
319.781 102.586 319.938 102.786 320.031 103.047  c
320.406 102.505 320.885 102.234 321.469 102.234  c
321.938 102.234 322.297 102.362 322.547 102.617  c
322.797 102.872 322.922 103.266 322.922 103.797  c
322.922 107.000 l
322.125 107.000 l
322.125 104.062 l
322.125 103.740 322.102 103.510 322.055 103.375  c
322.008 103.240 321.917 103.128 321.781 103.039  c
321.646 102.951 321.484 102.906 321.297 102.906  c
320.974 102.906 320.703 103.016 320.484 103.234  c
320.266 103.453 320.156 103.802 320.156 104.281  c
320.156 107.000 l
319.359 107.000 l
319.359 103.969 l
319.359 103.615 319.297 103.349 319.172 103.172  c
319.047 102.995 318.839 102.906 318.547 102.906  c
318.318 102.906 318.109 102.966 317.922 103.086  c
317.734 103.206 317.599 103.378 317.516 103.602  c
317.432 103.826 317.391 104.151 317.391 104.578  c
317.391 107.000 l
316.594 107.000 l
h
323.794 104.672 m
323.794 103.807 324.034 103.167 324.513 102.750  c
324.919 102.406 325.409 102.234 325.981 102.234  c
326.627 102.234 327.153 102.443 327.560 102.859  c
327.966 103.276 328.169 103.854 328.169 104.594  c
328.169 105.198 328.078 105.672 327.896 106.016  c
327.713 106.359 327.450 106.628 327.106 106.820  c
326.763 107.013 326.388 107.109 325.981 107.109  c
325.325 107.109 324.797 106.898 324.396 106.477  c
323.994 106.055 323.794 105.453 323.794 104.672  c
h
324.606 104.672 m
324.606 105.266 324.737 105.711 324.997 106.008  c
325.257 106.305 325.586 106.453 325.981 106.453  c
326.377 106.453 326.705 106.305 326.966 106.008  c
327.226 105.711 327.356 105.255 327.356 104.641  c
327.356 104.068 327.226 103.630 326.966 103.328  c
326.705 103.026 326.377 102.875 325.981 102.875  c
325.586 102.875 325.257 103.023 324.997 103.320  c
324.737 103.617 324.606 104.068 324.606 104.672  c
h
332.127 107.000 m
332.127 106.406 l
331.825 106.875 331.388 107.109 330.815 107.109  c
330.450 107.109 330.112 107.005 329.799 106.797  c
329.487 106.589 329.245 106.302 329.073 105.938  c
328.901 105.573 328.815 105.151 328.815 104.672  c
328.815 104.203 328.893 103.779 329.049 103.398  c
329.206 103.018 329.437 102.729 329.745 102.531  c
330.052 102.333 330.398 102.234 330.784 102.234  c
331.065 102.234 331.315 102.292 331.534 102.406  c
331.752 102.521 331.930 102.677 332.065 102.875  c
332.065 100.562 l
332.862 100.562 l
332.862 107.000 l
332.127 107.000 l
h
329.627 104.672 m
329.627 105.266 329.752 105.711 330.002 106.008  c
330.252 106.305 330.549 106.453 330.893 106.453  c
331.237 106.453 331.531 106.312 331.776 106.031  c
332.021 105.750 332.143 105.318 332.143 104.734  c
332.143 104.099 332.018 103.630 331.768 103.328  c
331.518 103.026 331.216 102.875 330.862 102.875  c
330.508 102.875 330.213 103.021 329.979 103.312  c
329.745 103.604 329.627 104.057 329.627 104.672  c
h
f
.698039 .635294 .913725 RG
newpath
336.000 128.000 m
339.314 128.000 342.000 125.314 342.000 122.000  c
342.000 118.686 339.314 116.000 336.000 116.000  c
336.000 122.000 l
h
f
.250980 .250980 .250980 RG
newpath
336.000 128.000 m
339.314 128.000 342.000 125.314 342.000 122.000  c
342.000 118.686 339.314 116.000 336.000 116.000  c
336.000 122.000 l
h
S
.411765 .447059 .392157 RG
newpath
322.781 123.500 m
323.609 123.594 l
323.474 124.073 323.232 124.445 322.883 124.711  c
322.534 124.977 322.089 125.109 321.547 125.109  c
320.870 125.109 320.331 124.898 319.930 124.477  c
319.529 124.055 319.328 123.464 319.328 122.703  c
319.328 121.922 319.531 121.315 319.938 120.883  c
320.344 120.451 320.870 120.234 321.516 120.234  c
322.141 120.234 322.648 120.445 323.039 120.867  c
323.430 121.289 323.625 121.885 323.625 122.656  c
323.625 122.708 323.625 122.781 323.625 122.875  c
320.141 122.875 l
320.172 123.385 320.318 123.776 320.578 124.047  c
320.839 124.318 321.167 124.453 321.562 124.453  c
321.854 124.453 322.102 124.378 322.305 124.227  c
322.508 124.076 322.667 123.833 322.781 123.500  c
h
320.188 122.219 m
322.797 122.219 l
322.766 121.823 322.667 121.526 322.500 121.328  c
322.250 121.026 321.922 120.875 321.516 120.875  c
321.151 120.875 320.846 120.997 320.602 121.242  c
320.357 121.487 320.219 121.812 320.188 122.219  c
h
324.068 125.000 m
325.771 122.578 l
324.193 120.328 l
325.193 120.328 l
325.912 121.422 l
326.037 121.630 326.141 121.807 326.224 121.953  c
326.360 121.755 326.479 121.583 326.583 121.438  c
327.365 120.328 l
328.318 120.328 l
326.708 122.531 l
328.443 125.000 l
327.474 125.000 l
326.505 123.547 l
326.255 123.156 l
325.037 125.000 l
324.068 125.000 l
h
332.146 124.422 m
331.854 124.672 331.573 124.849 331.302 124.953  c
331.031 125.057 330.740 125.109 330.427 125.109  c
329.917 125.109 329.524 124.984 329.248 124.734  c
328.972 124.484 328.833 124.161 328.833 123.766  c
328.833 123.536 328.886 123.328 328.990 123.141  c
329.094 122.953 329.229 122.802 329.396 122.688  c
329.563 122.573 329.750 122.484 329.958 122.422  c
330.115 122.391 330.349 122.354 330.662 122.312  c
331.307 122.240 331.781 122.146 332.083 122.031  c
332.083 121.927 332.083 121.859 332.083 121.828  c
332.083 121.505 332.011 121.281 331.865 121.156  c
331.656 120.969 331.354 120.875 330.958 120.875  c
330.583 120.875 330.307 120.940 330.130 121.070  c
329.953 121.201 329.823 121.432 329.740 121.766  c
328.974 121.672 l
329.037 121.339 329.149 121.070 329.310 120.867  c
329.472 120.664 329.706 120.508 330.013 120.398  c
330.320 120.289 330.672 120.234 331.068 120.234  c
331.474 120.234 331.800 120.281 332.044 120.375  c
332.289 120.469 332.472 120.586 332.591 120.727  c
332.711 120.867 332.792 121.047 332.833 121.266  c
332.865 121.401 332.880 121.641 332.880 121.984  c
332.880 123.047 l
332.880 123.776 332.896 124.240 332.927 124.438  c
332.958 124.635 333.026 124.823 333.130 125.000  c
332.302 125.000 l
332.219 124.833 332.167 124.641 332.146 124.422  c
h
332.083 122.656 m
331.792 122.771 331.360 122.870 330.787 122.953  c
330.464 123.005 330.235 123.060 330.099 123.117  c
329.964 123.174 329.860 123.260 329.787 123.375  c
329.714 123.490 329.677 123.615 329.677 123.750  c
329.677 123.958 329.755 124.133 329.912 124.273  c
330.068 124.414 330.302 124.484 330.615 124.484  c
330.917 124.484 331.188 124.417 331.427 124.281  c
331.667 124.146 331.844 123.964 331.958 123.734  c
332.042 123.557 332.083 123.297 332.083 122.953  c
332.083 122.656 l
h
f
gsave /DeviceRGB setcolorspace
[ 16.0000 0.00000 0.00000 16.0000 249.000 134.000 ] concat
<<
/ImageType 1
/Width 16  /Height 16
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [16 0 0 16 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gas-Vk0lu7ULu7;!td7;B.]`ciGZeU^^NUr#*=a5EI(ojX>>>qBCqFr?.7BtA9Gr8\Hi0=Ypu?WG+P3?
DqWpqk2iG!98aaU(',<7o?ua5H0;<!O/^t^ai_%q/SAs'mbI;`q2moFA7X!rZ`d5I8[cM.TOsS$gB@2j
=]VL0?*]fC!YLLpjLY#"!2\&T&*3"&8-LY)8mZ@=[+Vd#]78pcIiot]Q#6"',Mba:bi&%DFpqSl;LH9\
j$_,PZ`0/6-F]V'.QZK&^;e+#`!Ook96MqnWDb6/mlf]Kk,O3u5W&F77`bgP]6`!R3u;B9U5E*-c5i?2
QNL=(.UVkSXSQsfF/L?]&5NukgUf;Dg"if7h7d&5a8g7;8e8,^!tkL\+V4YS+7)G6~>

grestore
1.00000 1.00000 1.00000 RG
newpath
-1.10218E-15 65.0000 m
3.31371 65.0000 6.00000 62.3137 6.00000 59.0000  c
6.00000 55.6863 3.31371 53.0000 1.83697E-15 53.0000  c
0.00000 59.0000 l
h
f
.250980 .250980 .250980 RG
newpath
-1.10218E-15 65.0000 m
3.31371 65.0000 6.00000 62.3137 6.00000 59.0000  c
6.00000 55.6863 3.31371 53.0000 1.83697E-15 53.0000  c
0.00000 59.0000 l
h
S
newpath
-14.4062 56.4688 m
-14.4062 55.5625 l
-13.6094 55.5625 l
-13.6094 56.4688 l
-14.4062 56.4688 l
h
-14.4062 62.0000 m
-14.4062 57.3281 l
-13.6094 57.3281 l
-13.6094 62.0000 l
-14.4062 62.0000 l
h
-12.4067 62.0000 m
-12.4067 57.3281 l
-11.6880 57.3281 l
-11.6880 58.0000 l
-11.3547 57.4896 -10.8599 57.2344 -10.2036 57.2344  c
-9.92236 57.2344 -9.66455 57.2839 -9.43018 57.3828  c
-9.19580 57.4818 -9.02132 57.6120 -8.90674 57.7734  c
-8.79215 57.9349 -8.70882 58.1302 -8.65674 58.3594  c
-8.62549 58.5052 -8.60986 58.7604 -8.60986 59.1250  c
-8.60986 62.0000 l
-9.40674 62.0000 l
-9.40674 59.1562 l
-9.40674 58.8333 -9.43799 58.5938 -9.50049 58.4375  c
-9.56299 58.2812 -9.67236 58.1536 -9.82861 58.0547  c
-9.98486 57.9557 -10.1672 57.9062 -10.3755 57.9062  c
-10.7088 57.9062 -10.9979 58.0130 -11.2427 58.2266  c
-11.4875 58.4401 -11.6099 58.8490 -11.6099 59.4531  c
-11.6099 62.0000 l
-12.4067 62.0000 l
h
-7.40137 63.7812 m
-7.40137 57.3281 l
-6.68262 57.3281 l
-6.68262 57.9375 l
-6.51595 57.6979 -6.32585 57.5208 -6.11230 57.4062  c
-5.89876 57.2917 -5.63574 57.2344 -5.32324 57.2344  c
-4.92741 57.2344 -4.57845 57.3359 -4.27637 57.5391  c
-3.97428 57.7422 -3.74512 58.0312 -3.58887 58.4062  c
-3.43262 58.7812 -3.35449 59.1875 -3.35449 59.6250  c
-3.35449 60.1042 -3.44043 60.5365 -3.61230 60.9219  c
-3.78418 61.3073 -4.03158 61.6016 -4.35449 61.8047  c
-4.67741 62.0078 -5.02116 62.1094 -5.38574 62.1094  c
-5.64616 62.1094 -5.88053 62.0521 -6.08887 61.9375  c
-6.29720 61.8229 -6.46908 61.6823 -6.60449 61.5156  c
-6.60449 63.7812 l
-7.40137 63.7812 l
h
-6.68262 59.6875 m
-6.68262 60.2917 -6.56022 60.7370 -6.31543 61.0234  c
-6.07064 61.3099 -5.77637 61.4531 -5.43262 61.4531  c
-5.08887 61.4531 -4.78939 61.3047 -4.53418 61.0078  c
-4.27897 60.7109 -4.15137 60.2500 -4.15137 59.6250  c
-4.15137 59.0312 -4.27376 58.5859 -4.51855 58.2891  c
-4.76335 57.9922 -5.05762 57.8438 -5.40137 57.8438  c
-5.73470 57.8438 -6.03158 58.0026 -6.29199 58.3203  c
-6.55241 58.6380 -6.68262 59.0938 -6.68262 59.6875  c
h
f
.592157 .749020 .560784 RG
newpath
1095.00 53.0000 m
1091.69 53.0000 1089.00 55.6863 1089.00 59.0000  c
1095.00 59.0000 l
h
f
newpath
1089.00 59.0000 m
1089.00 62.3137 1091.69 65.0000 1095.00 65.0000  c
1095.00 59.0000 l
h
f
.250980 .250980 .250980 RG
newpath
1095.00 53.0000 m
1091.69 53.0000 1089.00 55.6863 1089.00 59.0000  c
1089.00 62.3137 1091.69 65.0000 1095.00 65.0000  c
1095.00 59.0000 l
h
S
newpath
1101.58 62.0000 m
1101.58 57.3281 l
1102.30 57.3281 l
1102.30 58.0469 l
1102.47 57.7135 1102.64 57.4948 1102.80 57.3906  c
1102.95 57.2865 1103.12 57.2344 1103.31 57.2344  c
1103.57 57.2344 1103.84 57.3177 1104.12 57.4844  c
1103.84 58.2188 l
1103.66 58.1042 1103.46 58.0469 1103.27 58.0469  c
1103.10 58.0469 1102.95 58.0990 1102.80 58.2031  c
1102.66 58.3073 1102.56 58.4531 1102.50 58.6406  c
1102.42 58.9219 1102.38 59.2292 1102.38 59.5625  c
1102.38 62.0000 l
1101.58 62.0000 l
h
1107.78 60.5000 m
1108.61 60.5938 l
1108.47 61.0729 1108.23 61.4453 1107.88 61.7109  c
1107.53 61.9766 1107.09 62.1094 1106.54 62.1094  c
1105.87 62.1094 1105.33 61.8984 1104.93 61.4766  c
1104.53 61.0547 1104.33 60.4635 1104.33 59.7031  c
1104.33 58.9219 1104.53 58.3151 1104.93 57.8828  c
1105.34 57.4505 1105.87 57.2344 1106.51 57.2344  c
1107.14 57.2344 1107.65 57.4453 1108.04 57.8672  c
1108.43 58.2891 1108.62 58.8854 1108.62 59.6562  c
1108.62 59.7083 1108.62 59.7812 1108.62 59.8750  c
1105.14 59.8750 l
1105.17 60.3854 1105.31 60.7760 1105.58 61.0469  c
1105.84 61.3177 1106.16 61.4531 1106.56 61.4531  c
1106.85 61.4531 1107.10 61.3776 1107.30 61.2266  c
1107.50 61.0755 1107.66 60.8333 1107.78 60.5000  c
h
1105.18 59.2188 m
1107.79 59.2188 l
1107.76 58.8229 1107.66 58.5260 1107.50 58.3281  c
1107.25 58.0260 1106.92 57.8750 1106.51 57.8750  c
1106.15 57.8750 1105.84 57.9974 1105.60 58.2422  c
1105.35 58.4870 1105.22 58.8125 1105.18 59.2188  c
h
1109.28 60.6094 m
1110.06 60.4844 l
1110.11 60.7969 1110.23 61.0365 1110.43 61.2031  c
1110.64 61.3698 1110.91 61.4531 1111.27 61.4531  c
1111.63 61.4531 1111.90 61.3802 1112.08 61.2344  c
1112.26 61.0885 1112.35 60.9167 1112.35 60.7188  c
1112.35 60.5312 1112.27 60.3906 1112.11 60.2969  c
1112.00 60.2240 1111.73 60.1302 1111.30 60.0156  c
1110.72 59.8698 1110.31 59.7448 1110.09 59.6406  c
1109.86 59.5365 1109.70 59.3906 1109.58 59.2031  c
1109.47 59.0156 1109.41 58.8073 1109.41 58.5781  c
1109.41 58.3698 1109.46 58.1771 1109.55 58.0000  c
1109.64 57.8229 1109.77 57.6719 1109.94 57.5469  c
1110.06 57.4635 1110.23 57.3906 1110.45 57.3281  c
1110.66 57.2656 1110.89 57.2344 1111.13 57.2344  c
1111.49 57.2344 1111.81 57.2865 1112.09 57.3906  c
1112.36 57.4948 1112.57 57.6354 1112.71 57.8125  c
1112.84 57.9896 1112.93 58.2292 1112.99 58.5312  c
1112.21 58.6406 l
1112.17 58.4010 1112.07 58.2135 1111.90 58.0781  c
1111.73 57.9427 1111.49 57.8750 1111.19 57.8750  c
1110.83 57.8750 1110.56 57.9349 1110.41 58.0547  c
1110.25 58.1745 1110.17 58.3177 1110.17 58.4844  c
1110.17 58.5885 1110.21 58.6771 1110.27 58.7500  c
1110.33 58.8438 1110.43 58.9167 1110.58 58.9688  c
1110.65 59.0000 1110.88 59.0677 1111.27 59.1719  c
1111.83 59.3177 1112.22 59.4375 1112.45 59.5312  c
1112.67 59.6250 1112.85 59.7630 1112.97 59.9453  c
1113.10 60.1276 1113.16 60.3542 1113.16 60.6250  c
1113.16 60.8958 1113.08 61.1458 1112.92 61.3750  c
1112.77 61.6042 1112.55 61.7839 1112.26 61.9141  c
1111.97 62.0443 1111.64 62.1094 1111.27 62.1094  c
1110.66 62.1094 1110.20 61.9818 1109.89 61.7266  c
1109.57 61.4714 1109.37 61.0990 1109.28 60.6094  c
h
f
1.00000 1.00000 1.00000 RG
newpath
1095.00 71.0000 m
1091.69 71.0000 1089.00 73.6863 1089.00 77.0000  c
1095.00 77.0000 l
h
f
newpath
1089.00 77.0000 m
1089.00 80.3137 1091.69 83.0000 1095.00 83.0000  c
1095.00 77.0000 l
h
f
.250980 .250980 .250980 RG
newpath
1095.00 71.0000 m
1091.69 71.0000 1089.00 73.6863 1089.00 77.0000  c
1089.00 80.3137 1091.69 83.0000 1095.00 83.0000  c
1095.00 77.0000 l
h
S
newpath
1101.58 80.0000 m
1101.58 75.3281 l
1102.30 75.3281 l
1102.30 76.0469 l
1102.47 75.7135 1102.64 75.4948 1102.80 75.3906  c
1102.95 75.2865 1103.12 75.2344 1103.31 75.2344  c
1103.57 75.2344 1103.84 75.3177 1104.12 75.4844  c
1103.84 76.2188 l
1103.66 76.1042 1103.46 76.0469 1103.27 76.0469  c
1103.10 76.0469 1102.95 76.0990 1102.80 76.2031  c
1102.66 76.3073 1102.56 76.4531 1102.50 76.6406  c
1102.42 76.9219 1102.38 77.2292 1102.38 77.5625  c
1102.38 80.0000 l
1101.58 80.0000 l
h
1107.78 78.5000 m
1108.61 78.5938 l
1108.47 79.0729 1108.23 79.4453 1107.88 79.7109  c
1107.53 79.9766 1107.09 80.1094 1106.54 80.1094  c
1105.87 80.1094 1105.33 79.8984 1104.93 79.4766  c
1104.53 79.0547 1104.33 78.4635 1104.33 77.7031  c
1104.33 76.9219 1104.53 76.3151 1104.93 75.8828  c
1105.34 75.4505 1105.87 75.2344 1106.51 75.2344  c
1107.14 75.2344 1107.65 75.4453 1108.04 75.8672  c
1108.43 76.2891 1108.62 76.8854 1108.62 77.6562  c
1108.62 77.7083 1108.62 77.7812 1108.62 77.8750  c
1105.14 77.8750 l
1105.17 78.3854 1105.31 78.7760 1105.58 79.0469  c
1105.84 79.3177 1106.16 79.4531 1106.56 79.4531  c
1106.85 79.4531 1107.10 79.3776 1107.30 79.2266  c
1107.50 79.0755 1107.66 78.8333 1107.78 78.5000  c
h
1105.18 77.2188 m
1107.79 77.2188 l
1107.76 76.8229 1107.66 76.5260 1107.50 76.3281  c
1107.25 76.0260 1106.92 75.8750 1106.51 75.8750  c
1106.15 75.8750 1105.84 75.9974 1105.60 76.2422  c
1105.35 76.4870 1105.22 76.8125 1105.18 77.2188  c
h
1109.28 78.6094 m
1110.06 78.4844 l
1110.11 78.7969 1110.23 79.0365 1110.43 79.2031  c
1110.64 79.3698 1110.91 79.4531 1111.27 79.4531  c
1111.63 79.4531 1111.90 79.3802 1112.08 79.2344  c
1112.26 79.0885 1112.35 78.9167 1112.35 78.7188  c
1112.35 78.5312 1112.27 78.3906 1112.11 78.2969  c
1112.00 78.2240 1111.73 78.1302 1111.30 78.0156  c
1110.72 77.8698 1110.31 77.7448 1110.09 77.6406  c
1109.86 77.5365 1109.70 77.3906 1109.58 77.2031  c
1109.47 77.0156 1109.41 76.8073 1109.41 76.5781  c
1109.41 76.3698 1109.46 76.1771 1109.55 76.0000  c
1109.64 75.8229 1109.77 75.6719 1109.94 75.5469  c
1110.06 75.4635 1110.23 75.3906 1110.45 75.3281  c
1110.66 75.2656 1110.89 75.2344 1111.13 75.2344  c
1111.49 75.2344 1111.81 75.2865 1112.09 75.3906  c
1112.36 75.4948 1112.57 75.6354 1112.71 75.8125  c
1112.84 75.9896 1112.93 76.2292 1112.99 76.5312  c
1112.21 76.6406 l
1112.17 76.4010 1112.07 76.2135 1111.90 76.0781  c
1111.73 75.9427 1111.49 75.8750 1111.19 75.8750  c
1110.83 75.8750 1110.56 75.9349 1110.41 76.0547  c
1110.25 76.1745 1110.17 76.3177 1110.17 76.4844  c
1110.17 76.5885 1110.21 76.6771 1110.27 76.7500  c
1110.33 76.8438 1110.43 76.9167 1110.58 76.9688  c
1110.65 77.0000 1110.88 77.0677 1111.27 77.1719  c
1111.83 77.3177 1112.22 77.4375 1112.45 77.5312  c
1112.67 77.6250 1112.85 77.7630 1112.97 77.9453  c
1113.10 78.1276 1113.16 78.3542 1113.16 78.6250  c
1113.16 78.8958 1113.08 79.1458 1112.92 79.3750  c
1112.77 79.6042 1112.55 79.7839 1112.26 79.9141  c
1111.97 80.0443 1111.64 80.1094 1111.27 80.1094  c
1110.66 80.1094 1110.20 79.9818 1109.89 79.7266  c
1109.57 79.4714 1109.37 79.0990 1109.28 78.6094  c
h
f
.752941 .752941 .752941 RG
[ 1.00000 0.00000 0.00000 1.00000 1120.00 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 10.0000 ] concat
Q
Q
end end restore showpage

%%Trailer
%%EOF
